{"version":3,"file":"static/js/7451.2050d409.chunk.js","mappings":"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","sources":["components/shared-components/EllipsisDropdown/index.js","components/shared-components/Flex/index.js","services/FirestoreService.js","utils/index.js","views/app-views/apps/ident-activity/ident-activity-list/index.js"],"sourcesContent":["import React from 'react';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown menu={{ items: props.menu }} placement={props.placement} trigger={[props.trigger]}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t);\r\n};\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string,\r\n\tmenu: PropTypes.array // menu sekarang berupa array of objects\r\n};\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import { db } from 'configs/FirebaseConfig';\nimport { collection, addDoc, getDocs, getDoc, doc, updateDoc, deleteDoc, arrayUnion, arrayRemove, query, where } from 'firebase/firestore';\n\nconst FirestoreService = {};\n\nFirestoreService.createDocument = async (collectionName, data) => {\n  try {\n    const docRef = await addDoc(collection(db, collectionName), data);\n    return docRef.id;\n  } catch (error) {\n    throw new Error('Error adding document: ' + error.message);\n  }\n};\n\nFirestoreService.getDocuments = async (collectionName) => {\n  try {\n    const querySnapshot = await getDocs(collection(db, collectionName));\n    const documents = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n    return documents;\n  } catch (error) {\n    throw new Error('Error getting documents: ' + error.message);\n  }\n};\n\nFirestoreService.getDocument = async (collectionName, docId) => {\n  try {\n    const docRef = doc(db, collectionName, docId);\n    const document = await getDoc(docRef);\n    if (document.exists()) {\n      return document.data();\n    } else {\n      throw new Error('Document not found');\n    }\n  } catch (error) {\n    throw new Error('Error fetching document: ' + error.message);\n  }\n};\n\nFirestoreService.updateDocument = async (collectionName, docId, data) => {\n  try {\n    const docRef = doc(db, collectionName, docId);\n    await updateDoc(docRef, data);\n  } catch (error) {\n    throw new Error('Error updating document: ' + error.message);\n  }\n};\n\n\nFirestoreService.deleteDocument = async (collectionName, docId) => {\n  try {\n    const docRef = doc(db, collectionName, docId);\n    await deleteDoc(docRef);\n  } catch (error) {\n    throw new Error('Error deleting document: ' + error.message);\n  }\n};\n\n\nFirestoreService.addToArray = async (collectionName, docId, field, value) => {\n  try {\n    const docRef = doc(db, collectionName, docId);\n    await updateDoc(docRef, {\n      [field]: arrayUnion(value)\n    });\n  } catch (error) {\n    throw new Error('Error adding to array: ' + error.message);\n  }\n};\n\nFirestoreService.removeFromArray = async (collectionName, docId, field, value) => {\n  try {\n    const docRef = doc(db, collectionName, docId);\n    await updateDoc(docRef, {\n      [field]: arrayRemove(value)\n    });\n  } catch (error) {\n    throw new Error('Error removing from array: ' + error.message);\n  }\n};\n\nFirestoreService.updateNestedMap = async (collectionName, docId, field, nestedField, value) => {\n  try {\n    const docRef = doc(db, collectionName, docId);\n    await updateDoc(docRef, {\n      [`${field}.${nestedField}`]: value\n    });\n  } catch (error) {\n    throw new Error('Error updating nested map: ' + error.message);\n  }\n};\n\nFirestoreService.getDocumentByField = async (collectionName, fieldName, value) => {\n  try {\n    const q = query(collection(db, collectionName), where(fieldName, \"==\", value));\n    const querySnapshot = await getDocs(q);\n    if (!querySnapshot.empty) {\n      return querySnapshot.docs[0].data();\n    } else {\n      throw new Error('Document not found');\n    }\n  } catch (error) {\n    throw new Error('Error fetching document: ' + error.message);\n  }\n};\n\n\n\nexport default FirestoreService;","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React, { useState, useEffect } from 'react'\nimport { Card, Table, Button, message, Modal } from 'antd';\nimport { EyeOutlined , DeleteOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\nimport Flex from 'components/shared-components/Flex'\nimport { useNavigate } from \"react-router-dom\";\nimport FirestoreService from 'services/FirestoreService';\nimport { doc, deleteDoc } from 'firebase/firestore';\nimport { db } from 'configs/FirebaseConfig';\nimport utils from 'utils'\n \n\nconst IdentActivityList = () => {\n\tconst navigate = useNavigate();\n\tconst [list, setList] = useState()\n\tconst [selectedRows, setSelectedRows] = useState([])\n\tconst [selectedRowKeys, setSelectedRowKeys] = useState([])\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\ttry {\n\t\t\t\tconst documents = await FirestoreService.getDocuments('identActivity');\n\t\t\t\tsetList(documents);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log('Error fetching documents: ', error.message);\n\t\t\t}\n\t\t};\n\t\tfetchData();\n\t}\n\t, []);\n\n\tconst dropdownMenu = row => [\n        {\n            key: 'edit',\n            label: (\n                <Flex alignItems=\"center\" onClick={() => viewDetails(row)}>\n                    <EyeOutlined  />\n                    <span className=\"ml-2\">Edit & View Detail</span>\n                </Flex>\n            ),\n        },\n      {\n        key: \"delete\",\n        label: (\n          <Flex alignItems=\"center\" onClick={() => deleteRow(row)}>\n            <DeleteOutlined />\n            <span className=\"ml-2\">\n              {selectedRows.length > 0\n                ? `Delete (${selectedRows.length})`\n                : \"Delete\"}\n            </span>\n          </Flex>\n        ),\n      },\n    ];\n\t\n\tconst addDoceng = () => {\n\t\tnavigate(`/app/apps/ident-activity/ident-activity-add`)\n\t}\n\t\n\tconst viewDetails = row => {\n\t\tnavigate(`/app/apps/ident-activity/ident-activity-edit/${row.id}`)\n\t}\n\t\n\tconst deleteRow = async (row) => {\n\t\tModal.confirm({\n\t\t  title: 'Apakah anda yakin ingin menghapus dokumen ini ?',\n\t\t  content: 'data yang dihapus tidak dapat dikembalikan',\n\t\t  onOk: async () => {\n\t\t\ttry {\n\t\t\t  // Delete the document from Firestore\n\t\t\t  await deleteDoc(doc(db, 'identActivity', row.id));\n\t  \n\t\t\t  // Update the local list\n\t\t\t  const objKey = 'id';\n\t\t\t  let data = list;\n\t\t\t  if (selectedRows.length > 1) {\n\t\t\t\tselectedRows.forEach((elm) => {\n\t\t\t\t  data = utils.deleteArrayRow(data, objKey, elm.id);\n\t\t\t\t});\n\t\t\t\tsetSelectedRows([]);\n\t\t\t  } else {\n\t\t\t\tdata = utils.deleteArrayRow(data, objKey, row.id);\n\t\t\t  }\n\t\t\t  setList(data);\n\t  \n\t\t\t  message.success('Document deleted successfully.');\n\t\t\t} catch (error) {\n\t\t\t  message.error(`Error deleting document: ${error.message}`);\n\t\t\t}\n\t\t  },\n\t\t  onCancel: () => {\n\t\t\tmessage.info('Deletion cancelled.');\n\t\t  },\n\t\t});\n\t  };\n\n\tconst tableColumns = [\n\t\t{\n\t\t\ttitle: 'ID',\n\t\t\tdataIndex: 'id',\n\t\t\trender: (text, record, index) => index + 1\n\n\t\t},\n\t\t{\n\t\t\ttitle: 'System Name',\n\t\t\tdataIndex: 'commSysDeffName',\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'commSysDeffName')\n\t\t},\n\t\t{\n\t\t\ttitle: 'System Number',\n\t\t\tdataIndex: 'commSysDeffNo',\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'commSysDeffNo')\n\t\t},\n        {\n\t\t\ttitle: 'Sub System Name',\n\t\t\tdataIndex: 'commSysDeffSubName',\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'commSysDeffSubName')\n\t\t},\n\t\t{\n\t\t\ttitle: 'Sub System Number',\n\t\t\tdataIndex: 'commSysDeffSubNo',\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'commSysDeffSubNo')\n\t\t},\n\t\t{\n\t\t\ttitle: '',\n\t\t\tdataIndex: 'actions',\n\t\t\trender: (_, elm) => (\n\t\t\t\t<div className=\"text-right\">\n\t\t\t\t\t<EllipsisDropdown menu={dropdownMenu(elm)}/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t];\n\t\n\tconst rowSelection = {\n\t\tonChange: (key, rows) => {\n\t\t\tsetSelectedRows(rows)\n\t\t\tsetSelectedRowKeys(key)\n\t\t}\n\t};\n\n\t// const onSearch = e => {\n\t// \tconst value = e.currentTarget.value\n\t// \tconst searchArray = e.currentTarget.value? list : ProductListData\n\t// \tconst data = utils.wildCardSearch(searchArray, value)\n\t// \tsetList(data)\n\t// \tsetSelectedRowKeys([])\n\t// } \n\n\treturn (\n\t\t<Card>\n\t\t\t<Flex alignItems=\"center\" justifyContent=\"space-between\" mobileFlex={false}>\n\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\n\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\n\t\t\t\t\t\t{/* <Input placeholder=\"Search\" prefix={<SearchOutlined />} onChange={e => onSearch(e)}/> */}\n\t\t\t\t\t</div>\n\t\t\t\t</Flex>\n\t\t\t\t<div>\n\t\t\t\t\t<Button onClick={addDoceng} type=\"primary\" icon={<PlusCircleOutlined />} block>Add Identification List</Button>\n\t\t\t\t</div>\n\t\t\t</Flex>\n\t\t\t<div className=\"table-responsive\">\n\t\t\t\t<Table \n\t\t\t\t\tcolumns={tableColumns} \n\t\t\t\t\tdataSource={list} \n\t\t\t\t\trowKey='id' \n\t\t\t\t\trowSelection={{\n\t\t\t\t\t\tselectedRowKeys: selectedRowKeys,\n\t\t\t\t\t\ttype: 'checkbox',\n\t\t\t\t\t\tpreserveSelectedRowKeys: false,\n\t\t\t\t\t\t...rowSelection,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</Card>\n\t)\n}\n\nexport default IdentActivityList\n"],"names":["EllipsisDropdown","props","menu","items","placement","trigger","className","defaultProps","Flex","styled","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","FirestoreService","createDocument","collectionName","data","addDoc","collection","db","docRef","id","Error","message","getDocuments","getDocs","querySnapshot","documents","docs","map","doc","getDocument","docId","getDoc","document","exists","updateDocument","updateDoc","deleteDocument","deleteDoc","addToArray","field","value","arrayUnion","removeFromArray","arrayRemove","updateNestedMap","nestedField","getDocumentByField","fieldName","q","query","where","empty","Utils","name","initials","match","shift","pop","toUpperCase","navTree","path","route","p","hasOwnProperty","this","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","color","percent","R","G","B","RR","toString","length","GG","BB","rgba","trim","str","replace","inParts","indexOf","split","r","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","number","positive","negative","key","toLowerCase","list","filter","item","input","searchText","screens","breakpoints","push","navigate","useNavigate","useState","setList","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","useEffect","fetchData","console","log","viewDetails","row","deleteRow","Modal","title","content","onOk","elm","utils","onCancel","tableColumns","dataIndex","render","text","record","index","sorter","_","label","onClick","rowSelection","onChange","rows","mobileFlex","type","icon","block","columns","dataSource","rowKey","preserveSelectedRowKeys"],"sourceRoot":""}